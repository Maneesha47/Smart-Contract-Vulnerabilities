==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Phishable
Function name: withdrawAll(address)
PC address: 355
Estimated Gas Usage: 1073 - 1498
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: phishable.sol:20

require(tx.origin == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawAll(address), txdata: 0xfa09e630, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: Phishable
Function name: withdrawAll(address)
PC address: 431
Estimated Gas Usage: 2604 - 37215
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: phishable.sol:21

_recipient.transfer(this.balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2c83c01282f00a909, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 5b5b5b5b5b5b5b5b5b5b5b5bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x20014001, value: 0x1
Caller: [ATTACKER], function: withdrawAll(address), txdata: 0xfa09e6305b5b5b5b5b5b5b5b5b5b5b5bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


